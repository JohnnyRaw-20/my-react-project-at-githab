{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","assets/parisAirport.jpg","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","ProfileInfo","profile","className","s","descriptionBlock","photoDescriptionBlock","src","paris_airport","elementDescriptionBlock","photos","large","userPhoto","mainPhoto","lookingForAJobDescription","aboutMe","Preloader","Post","item","alt","messagePost","post","lakesCount","maxLength10","maxLengthCreator","window","MyPosts","push","this","postsElements","posts","map","p","key","id","likesCount","postsBlock","AddNewPostReduxForm","onSubmit","values","onAddPost","newPostText","React","Component","reduxForm","form","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","match","params","auterisedUserId","history","getUserProfile","getStatus","compose","auth","isAuth","withRouter"],"mappings":"+GACAA,EAAOC,QAAU,CAAC,iBAAmB,sCAAsC,sBAAwB,2CAA2C,wBAA0B,6CAA6C,UAAY,iC,oBCDjOD,EAAOC,QAAU,IAA0B,0C,oBCC3CD,EAAOC,QAAU,CAAC,WAAa,4BAA4B,MAAQ,yB,oBCAnED,EAAOC,QAAU,CAAC,KAAO,mBAAmB,YAAc,4B,iKC8C3CC,EA5CgB,SAACC,GAAW,IAAD,EAETC,oBAAS,GAFA,mBAEjCC,EAFiC,KAExBC,EAFwB,OAIZF,mBAASD,EAAMI,QAJH,mBAIjCA,EAJiC,KAIzBC,EAJyB,KAMtCC,qBAAU,WAEND,EAAUL,EAAMI,UACjB,CAACJ,EAAMI,SAcV,OACI,8BACMF,GACF,6BACI,0BAAMK,cAhBO,WACrBJ,GAAY,KAeJ,WAAiDH,EAAMI,QAAU,SAAjE,MAGHF,GACD,6BACI,yCACA,2BACIM,WAAW,EACXC,OArBW,WACvBN,GAAY,GACZH,EAAMU,aAAaN,IAoBPO,SAjBO,SAACC,GACpBP,EAAUO,EAAEC,cAAcC,QAiBdA,MAAOV,O,kBCFZW,EA/BK,SAAC,GAA8C,IAA7CC,EAA4C,EAA5CA,QAASZ,EAAmC,EAAnCA,OAAQM,EAA2B,EAA3BA,aAA2B,mDAE9D,OAAKM,EAKD,6BACI,yBAAKC,UAAWC,IAAEC,kBACd,yBAAKF,UAAWC,IAAEE,uBAClB,yBAAKC,IAAKC,OAEV,yBAAKL,UAAWC,IAAEK,yBAClB,yBAAKF,IAAKL,EAAQQ,OAAOC,OAASC,IAAWT,UAAWC,IAAES,cAI9D,yBAAKV,UAAWC,IAAEC,kBACd,yBAAKF,UAAWC,IAAEK,yBACd,8BAAOP,EAAQY,0BAA4B,0EAAqB,KAC3DZ,EAAQY,4BAEjB,yBAAKX,UAAWC,IAAEK,yBACd,8BAAOP,EAAQa,QAAS,qCAAc,KAAOb,EAAQa,UAEzD,kBAAC,EAAD,CAAwBzB,OAAQA,EAAQM,aAAcA,MAtBvD,kBAACoB,EAAA,EAAD,O,4CCUAC,EAjBF,SAAC/B,GACV,OACI,yBAAKiB,UAAWC,IAAEc,MACd,yBACIX,IAAI,6GACJY,IAAI,KACR,yBAAKhB,UAAWC,IAAEgB,aACblC,EAAMmC,MAEX,6BACI,uCADJ,IACwBnC,EAAMoC,YAE9B,+B,iCCRZ,IAAMC,EAAcC,YAAiB,IAyBrCC,OAAOvC,MAAQ,G,IAETwC,E,ulBACQ,IAAD,OACLD,OAAOvC,MAAMyC,KAAKC,KAAK1C,OAEvB,IAAI2C,EAAgBD,KAAK1C,MAAM4C,MAAMC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAMX,KAAMW,EAAEX,KAAMY,IAAKD,EAAEE,GAAIZ,WAAYU,EAAEG,gBAqB3F,OACI,6BACI,yBAAKhC,UAAWC,IAAEgC,YACd,yCAEJ,kBAACC,EAAD,CAAqBC,SAtBb,SAACC,GACb,EAAKrD,MAAMsD,UAAUD,EAAOE,gBAsBxB,yBAAKtC,UAAWC,IAAE0B,OACbD,Q,GAhCCa,IAAMC,WAyCtBN,EAAsBO,YAAW,CAACC,KAAM,yBAAlBD,EA9DL,SAAC1D,GACpB,OACI,0BAAMoD,SAAUpD,EAAM4D,cAGlB,kBAACC,EAAA,EAAD,CAAOC,KAAM,cACNC,UAAWC,IACXC,YAAa,YACbC,SAAU,CAACC,IAAU9B,KANhC,eAQI,6BAEI,iDAsDDG,I,QChCA4B,EAFUC,aAlBH,SAACC,GACnB,MAAO,CACH1B,MAAO0B,EAAMC,YAAY3B,MACzBW,YAAae,EAAMC,YAAYhB,gBAId,SAACiB,GACtB,MAAO,CACHlB,UAAW,SAACC,GACRiB,EAASC,YAAqBlB,QAQjBc,CAA8C7B,GC9BxDkC,EAVC,SAAC1E,GACb,OAAQ,6BACA,kBAAC,EAAD,CAAagB,QAAShB,EAAMgB,QACfZ,OAAQJ,EAAMI,OACdM,aAAcV,EAAMU,eACjC,kBAAC,EAAD,Q,mBCDNiE,E,kmBAGE,IAAIC,EAASlC,KAAK1C,MAAM6E,MAAMC,OAAOF,OACjCA,IACAA,EAASlC,KAAK1C,MAAM+E,iBAClBH,GACFlC,KAAK1C,MAAMgF,QAAQvC,KAAK,UAE5BC,KAAK1C,MAAMiF,eAAeL,GAC1BlC,KAAK1C,MAAMkF,UAAUN,K,+BAIrB,OACI,kBAAC,EAAD,iBAAalC,KAAK1C,MAAlB,CACSgB,QAAS0B,KAAK1C,MAAMgB,QACpBZ,OAAQsC,KAAK1C,MAAMI,OACnBM,aAAcgC,KAAK1C,MAAMU,oB,GAlBf8C,IAAMC,WAkCtB0B,sBACXd,aAVkB,SAACC,GAAD,MAAY,CAC9BtD,QAASsD,EAAMC,YAAYvD,QAC3BZ,OAAQkE,EAAMC,YAAYnE,OAC1B2E,gBAAkBT,EAAMc,KAAKR,OAC7BS,OAAQf,EAAMc,KAAKC,UAMK,CAACJ,mBAAgBC,cAAWxE,mBACpD4E,IAFWH,CAIbR","file":"static/js/3.f99a6a9a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3MG-7\",\"photoDescriptionBlock\":\"ProfileInfo_photoDescriptionBlock__1RQRY\",\"elementDescriptionBlock\":\"ProfileInfo_elementDescriptionBlock__GPwC3\",\"mainPhoto\":\"ProfileInfo_mainPhoto__1VHGi\"};","module.exports = __webpack_public_path__ + \"static/media/parisAirport.80f8d2c6.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3rGid\",\"posts\":\"MyPosts_posts__Rcf_I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2bzvv\",\"messagePost\":\"Post_messagePost__2yCAf\"};","import React, {useEffect, useState} from \"react\";\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode,setEditMode] = useState(false);\r\n    /*hook - useState() возвращает массив из 2-х элементов (урок 84) синтаксис деструктурирующего присваивания*/\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {                                                   /*урок 85*/\r\n\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode} >STATUS: {props.status || \"------\"} </span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <span>STATUS:</span>\r\n                <input\r\n                    autoFocus={true}\r\n                    onBlur={deactivateEditMode}\r\n                    onChange={onStatusChange}\r\n                    value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks ;\r\n\r\n\r\n","import React from 'react';\r\nimport s from './ProfileInfo.module.css'\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport paris_airport from \"../../../assets/parisAirport.jpg\";\r\nimport ProfileStatusWithHooks from \"../ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/userPhoto.png\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus,...props}) => {\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <div className={s.photoDescriptionBlock}>\r\n                <img src={paris_airport}/>\r\n                </div>\r\n                <div className={s.elementDescriptionBlock}>\r\n                <img src={profile.photos.large || userPhoto} className={s.mainPhoto}/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={s.descriptionBlock}>\r\n                <div className={s.elementDescriptionBlock}>\r\n                    <span>{profile.lookingForAJobDescription ? 'Учеба(работа) : ' : null}\r\n                        {profile.lookingForAJobDescription}</span>\r\n                </div>\r\n                <div className={s.elementDescriptionBlock}>\r\n                    <span>{profile.aboutMe? 'О себе : ' : null }{profile.aboutMe}</span>\r\n                </div>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img\r\n                src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRgMvLwJ_LbLDZ1684YtSCV5IIreBPG0jijG_hxQ6mEe02v9_-a&s\"\r\n                alt=\"\"/>\r\n            <div className={s.messagePost}>\r\n                {props.post}\r\n            </div>\r\n            <div>\r\n                <span>Like:</span> {props.lakesCount}\r\n            </div>\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css'\r\nimport Post from './Post/Post'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\nconst styleFormError = {\r\n    border: 'solid red 2px',\r\n    color:'red'\r\n}\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            {/*<div>*/}\r\n            {/*<textarea onChange={onPostChange} ref={newPostElement} value={props.newPostText}/>*/}\r\n            <Field name={\"newPostText\"}\r\n                   component={Textarea}\r\n                   placeholder={\"Your post\"}\r\n                   validate={[required, maxLength10]}/>            {/*валидатор урок 77*/}\r\n            {/*</div>*/}\r\n            <div>\r\n                {/*<button onClick={onAddPost}>Add post</button>*/}\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nwindow.props = [];\r\n\r\nclass MyPosts extends React.Component {\r\n    render() {\r\n        window.props.push(this.props);\r\n\r\n        let postsElements = this.props.posts.map(p => <Post post={p.post} key={p.id} lakesCount={p.likesCount}/>);\r\n\r\n        // let newPostElement = React.createRef();\r\n\r\n        let onAddPost = (values) => {                /*функция-обработчик, которую передаем в redux-form (урок 76)*/\r\n            this.props.onAddPost(values.newPostText);\r\n\r\n            // let action = {type: 'ADD-POST'};\r\n            // props.dispatch(addPostActionCreator());\r\n        }\r\n\r\n        // let onPostChange = () => {\r\n        //     let text = newPostElement.current.value;\r\n        //     props.onPostChange(text);\r\n\r\n        // let action = {type: 'UPDATE-NEW-POST-TEXT', newText: text};\r\n        // let action = updateNewPostTextActionCreator(text);\r\n        // props.dispatch(action);\r\n        // }\r\n\r\n\r\n        return (\r\n            <div>\r\n                <div className={s.postsBlock}>\r\n                    <h3>My Posts</h3>\r\n                </div>\r\n                <AddNewPostReduxForm onSubmit={onAddPost}/>\r\n                <div className={s.posts}>\r\n                    {postsElements}\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst AddNewPostReduxForm = reduxForm ({form: 'ProfileAddNewPostForm'})(AddNewPostForm)\r\n\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n// const MyPostsContainer = (props) => {\r\n//\r\n//     let state = props.store.getState();\r\n//\r\n//     let onAddPost = () => {\r\n//         props.store.dispatch(addPostActionCreator());\r\n//     }\r\n//\r\n//     let onPostChange = (text) => {\r\n//         let action = updateNewPostTextActionCreator(text);\r\n//         props.store.dispatch(action);\r\n//     }\r\n//\r\n//     return (\r\n//         <MyPosts updateNewPostText={onPostChange}\r\n//                  addPost={onAddPost}\r\n//                  posts={state.profilePage.posts}\r\n//                  newPostText={state.profilePage.newPostText}\r\n//         />\r\n//     );\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onAddPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n        // onPostChange: (text) => {\r\n        //     let action = updateNewPostTextActionCreator(text);\r\n        //     dispatch(action);\r\n        // }\r\n    }\r\n}\r\nconst MyPostsContainer = connect (mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (<div>\r\n            <ProfileInfo profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {getUserProfile} from \"../../redux/profile-reducer\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if(!userId) {\r\n            userId = this.props.auterisedUserId;\r\n        }if (!userId) {\r\n            this.props.history.push(\"/login\");                   /*рендеринг с помщью push урок 80*/\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}                            /*спред-оператор используем обязательно!*/\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}/>\r\n\r\n            );\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    auterisedUserId : state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\n\r\n\r\nexport default compose (                                                              /*compose урок 70*/\r\n    connect(mapStateToProps,{getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    // withAuthRedirect                                                              /*HOC урок 69*/\r\n)(ProfileContainer)"],"sourceRoot":""}